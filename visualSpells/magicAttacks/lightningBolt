let tokenD = canvas.tokens.controlled[0];
if (!tokenD) { return; }
const effects = Sequencer.EffectManager.getEffects({ name: "bolaDeEnergia", object: tokenD });

if (effects.length) {
    Sequencer.EffectManager.endEffects({ name: "*bolaDeEnergia*", object: tokenD });

    let targets = Array.from(game.user.targets);
    targets.forEach((target) => {
        new Sequence()
            .effect()
            .file("modules/jb2a_patreon/Library/3rd_Level/Lightning_Bolt/LightningBolt_01_Regular_Blue_4000x400.webm")
            .atLocation(token, { randomOffset: true })
            .stretchTo(target, { attachTo: true })
            .scale(1)
            .wait(1500)

            .effect()
            .file("modules/jb2a_patreon/Library/Generic/Lightning/LightningBall_01_Regular_Blue_400x400.webm")
            .atLocation(target)
            .scaleOut(0.1, 500, { ease: "easeInOutBounce", delay: 0 })


            .play()
    })
} else {
    //efeito bolaDeEnergia

    new Sequence()
        .effect()
        .file("modules/jb2a_patreon/Library/Generic/Lightning/LightningBall_01_Regular_Blue_400x400.webm")
        .scale(0.25)
        .atLocation(tokenD, { randomOffset: true })
        .zeroSpriteRotation(true)
        .attachTo(tokenD, { bindVisibility: false })
        .name("bolaDeEnergia")
        .persist()
        .spriteOffset({ x: 10, y: 0 })
        .zeroSpriteRotation(true)
        .play()

}


const cDimLight = 2;
const cBrightLight = 1;
const cAnimationType = "torch";
const cAngle = 360;


let dataUpdate = {
    'light.angle': !token.data.angle ? cAngle : 0,
    'light.dim': !token.data.light.dim ? cDimLight : 0,
    'light.bright': !token.data.light.bright ? cBrightLight : 0,
    'light.color': '#75b8ff',
    'light.alpha': 0.5,
    'light.animation': { "type": cAnimationType, "speed": 9, "intensity": 8 }
};
tokenD.document.update(dataUpdate);